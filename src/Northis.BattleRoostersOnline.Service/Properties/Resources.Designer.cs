//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Northis.BattleRoostersOnline.Service.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Northis.BattleRoostersOnline.Service.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Данный пользователь уже находится в системе.
        /// </summary>
        internal static string StrAlreadyLoggedIn {
            get {
                return ResourceManager.GetString("StrAlreadyLoggedIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Данный пользователь уже зарегистрирован.
        /// </summary>
        internal static string StrAlreadyRegistered {
            get {
                return ResourceManager.GetString("StrAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Авторизация не пройдена!.
        /// </summary>
        internal static string StrErrorAuthorizationNotSuccess {
            get {
                return ResourceManager.GetString("StrErrorAuthorizationNotSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Попытка начать бой друг с другом.
        /// </summary>
        internal static string StrErrorFightAgainstYourself {
            get {
                return ResourceManager.GetString("StrErrorFightAgainstYourself", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Попытка поиска матча не авторизованным петухом..
        /// </summary>
        internal static string StrErrorNotLoginedRoosterFind {
            get {
                return ResourceManager.GetString("StrErrorNotLoginedRoosterFind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Попытка поиска матча не авторизованным пользователем..
        /// </summary>
        internal static string StrErrorNotLoginedUserFind {
            get {
                return ResourceManager.GetString("StrErrorNotLoginedUserFind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В сессии {0} закончилось сражение.
        /// </summary>
        internal static string StrFmtInfoEndBattleInTheSession {
            get {
                return ResourceManager.GetString("StrFmtInfoEndBattleInTheSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Поиск соперника в сессии {0} был отменен пользователем {1}.
        /// </summary>
        internal static string StrFmtInfoFindingEnemyCanceled {
            get {
                return ResourceManager.GetString("StrFmtInfoFindingEnemyCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Поиск матча был отменен пользователем {0}, сессия {1} закрыта.
        /// </summary>
        internal static string StrFmtInfoFindingMatchWasEndingByUser {
            get {
                return ResourceManager.GetString("StrFmtInfoFindingMatchWasEndingByUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В сессию {0} добавился первый боец {1}.
        /// </summary>
        internal static string StrFmtInfoFirstFighterEnteredInSession {
            get {
                return ResourceManager.GetString("StrFmtInfoFirstFighterEnteredInSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Инициализована новая сессия {0}.
        /// </summary>
        internal static string StrFmtInfoNewSessionInitialized {
            get {
                return ResourceManager.GetString("StrFmtInfoNewSessionInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В сессию {0} добавился второй боец {1}.
        /// </summary>
        internal static string StrFmtInfoSecondFighterEnteredInSession {
            get {
                return ResourceManager.GetString("StrFmtInfoSecondFighterEnteredInSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В сессии {0} началось сражение.
        /// </summary>
        internal static string StrFmtInfoStartBattleInTheSession {
            get {
                return ResourceManager.GetString("StrFmtInfoStartBattleInTheSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Запуск удаления петуха {0}..
        /// </summary>
        internal static string StrFmtInfoStartDeletingRooster {
            get {
                return ResourceManager.GetString("StrFmtInfoStartDeletingRooster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вызвана остановка сессии {0} по причине дезертирства.
        /// </summary>
        internal static string StrFmtInfoStopBattleDueToDesertion {
            get {
                return ResourceManager.GetString("StrFmtInfoStopBattleDueToDesertion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Регистрация пользователя {0} прошла успешно.
        /// </summary>
        internal static string StrFmtInfoSuccessRegitstration {
            get {
                return ResourceManager.GetString("StrFmtInfoSuccessRegitstration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Попытка авторизации незарегистрированным пользователем {0}.
        /// </summary>
        internal static string StrFmtInfoTryLoginNotRegistredUser {
            get {
                return ResourceManager.GetString("StrFmtInfoTryLoginNotRegistredUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Попытка регистрации уже зарегистрированным пользователем {0}.
        /// </summary>
        internal static string StrFmtInfoTryRegisterAlreadyRegistredUser {
            get {
                return ResourceManager.GetString("StrFmtInfoTryRegisterAlreadyRegistredUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Пользователь {0} дезертировал.
        /// </summary>
        internal static string StrFmtInfoUserDeserted {
            get {
                return ResourceManager.GetString("StrFmtInfoUserDeserted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Пользователь {0} вошел в сеть с токеном {1}.
        /// </summary>
        internal static string StrFmtInfoUserLogined {
            get {
                return ResourceManager.GetString("StrFmtInfoUserLogined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Пользователь {0} вышел из сети.
        /// </summary>
        internal static string StrFmtInfoUserLogOut {
            get {
                return ResourceManager.GetString("StrFmtInfoUserLogOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Удаление петуха {0} пользователя {1} неуспешно.
        /// </summary>
        internal static string StrFmtWarnDeleteRoosterFailed {
            get {
                return ResourceManager.GetString("StrFmtWarnDeleteRoosterFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Попытка дисконекта от неавторизованного пользователя {0}.
        /// </summary>
        internal static string StrFmtWarnTryDisconnectNotAuthorizedUser {
            get {
                return ResourceManager.GetString("StrFmtWarnTryDisconnectNotAuthorizedUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Попытка поиска матча не авторизованным пользователем {0}.
        /// </summary>
        internal static string StrFmtWarnTryFindMatchByNotAuthorizedUser {
            get {
                return ResourceManager.GetString("StrFmtWarnTryFindMatchByNotAuthorizedUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Попытка поиска матча не созданным петухом {0}.
        /// </summary>
        internal static string StrFmtWarnTryFindMatchNotCreatedRooster {
            get {
                return ResourceManager.GetString("StrFmtWarnTryFindMatchNotCreatedRooster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Попытка добавиться в сессию противниками с одинаковыми логинами {0}.
        /// </summary>
        internal static string StrFmtWarnTryToEnterInSessionWithSameLogins {
            get {
                return ResourceManager.GetString("StrFmtWarnTryToEnterInSessionWithSameLogins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Новый петух добавлен в список петухов пользователя..
        /// </summary>
        internal static string StrInfoNewRoosterAdded {
            get {
                return ResourceManager.GetString("StrInfoNewRoosterAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Статус готовности петухов к сражению обновлен..
        /// </summary>
        internal static string StrInfoStatusUpdated {
            get {
                return ResourceManager.GetString("StrInfoStatusUpdated", resourceCulture);
            }
        }
    }
}
